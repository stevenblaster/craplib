#version 330 core

uniform vec4 vec4_ambientColor = vec4(0.3,0.3,0.3,1.0); //red is default ambientColor
uniform vec4 vec4_diffuseColor = vec4(1.0,1.0,0.0,1.0); //red is default ambientColor
uniform vec4 vec4_specularColor = vec4(0.8,0.8,0.8,1.0); //red is default ambientColor
uniform float f_shininess = 90; //red is default ambientColor

in Data {
	vec3 vec3_normal;
	vec3 vec3_eye;
	vec3 vec3_lightDir;
} DataIn;

out vec4 outputF;

void main() {		
	vec4 spec = vec4(0.0);
 
    vec3 n = normalize(DataIn.vec3_normal);
    vec3 l = normalize(DataIn.vec3_lightDir);
    vec3 e = normalize(DataIn.vec3_eye);
 
    float intensity = max(dot(n,l), 0.0);
    if (intensity > 0.0) {
        vec3 h = normalize(l + e);
        float intSpec = max(dot(h,n), 0.0);
        spec = vec4_specularColor * pow(intSpec, f_shininess);
    }
 
    outputF = max(intensity * vec4_diffuseColor + spec, vec4_ambientColor);
}	
