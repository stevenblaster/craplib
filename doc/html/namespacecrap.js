var namespacecrap =
[
    [ "binary_tree", "classcrap_1_1binary__tree.html", "classcrap_1_1binary__tree" ],
    [ "bit_mask", "classcrap_1_1bit__mask.html", "classcrap_1_1bit__mask" ],
    [ "bit_set", "classcrap_1_1bit__set.html", "classcrap_1_1bit__set" ],
    [ "list", "classcrap_1_1list.html", null ],
    [ "less_first", "structcrap_1_1less__first.html", "structcrap_1_1less__first" ],
    [ "less_second", "structcrap_1_1less__second.html", "structcrap_1_1less__second" ],
    [ "tree_map", "classcrap_1_1tree__map.html", null ],
    [ "pair", "structcrap_1_1pair.html", "structcrap_1_1pair" ],
    [ "queue", "classcrap_1_1queue.html", null ],
    [ "static_queue", "classcrap_1_1static__queue.html", "classcrap_1_1static__queue" ],
    [ "stack", "classcrap_1_1stack.html", null ],
    [ "static_stack", "classcrap_1_1static__stack.html", "classcrap_1_1static__stack" ],
    [ "tree_node", "structcrap_1_1tree__node.html", "structcrap_1_1tree__node" ],
    [ "vector", "classcrap_1_1vector.html", null ],
    [ "has_vtable", "structcrap_1_1has__vtable.html", "structcrap_1_1has__vtable" ],
    [ "has_vtable< b8 >", "structcrap_1_1has__vtable_3_01b8_01_4.html", "structcrap_1_1has__vtable_3_01b8_01_4" ],
    [ "has_vtable< i32 >", "structcrap_1_1has__vtable_3_01i32_01_4.html", "structcrap_1_1has__vtable_3_01i32_01_4" ],
    [ "has_vtable< u32 >", "structcrap_1_1has__vtable_3_01u32_01_4.html", "structcrap_1_1has__vtable_3_01u32_01_4" ],
    [ "has_vtable< i16 >", "structcrap_1_1has__vtable_3_01i16_01_4.html", "structcrap_1_1has__vtable_3_01i16_01_4" ],
    [ "has_vtable< u16 >", "structcrap_1_1has__vtable_3_01u16_01_4.html", "structcrap_1_1has__vtable_3_01u16_01_4" ],
    [ "has_vtable< c8 >", "structcrap_1_1has__vtable_3_01c8_01_4.html", "structcrap_1_1has__vtable_3_01c8_01_4" ],
    [ "has_vtable< i8 >", "structcrap_1_1has__vtable_3_01i8_01_4.html", "structcrap_1_1has__vtable_3_01i8_01_4" ],
    [ "has_vtable< u8 >", "structcrap_1_1has__vtable_3_01u8_01_4.html", "structcrap_1_1has__vtable_3_01u8_01_4" ],
    [ "has_vtable< f32 >", "structcrap_1_1has__vtable_3_01f32_01_4.html", "structcrap_1_1has__vtable_3_01f32_01_4" ],
    [ "has_vtable< i64 >", "structcrap_1_1has__vtable_3_01i64_01_4.html", "structcrap_1_1has__vtable_3_01i64_01_4" ],
    [ "has_vtable< u64 >", "structcrap_1_1has__vtable_3_01u64_01_4.html", "structcrap_1_1has__vtable_3_01u64_01_4" ],
    [ "has_vtable< f64 >", "structcrap_1_1has__vtable_3_01f64_01_4.html", "structcrap_1_1has__vtable_3_01f64_01_4" ],
    [ "binary_function", "structcrap_1_1binary__function.html", "structcrap_1_1binary__function" ],
    [ "less", "structcrap_1_1less.html", "structcrap_1_1less" ],
    [ "greater", "structcrap_1_1greater.html", "structcrap_1_1greater" ],
    [ "equal_to", "structcrap_1_1equal__to.html", "structcrap_1_1equal__to" ],
    [ "not_equal_to", "structcrap_1_1not__equal__to.html", "structcrap_1_1not__equal__to" ],
    [ "greater_equal", "structcrap_1_1greater__equal.html", "structcrap_1_1greater__equal" ],
    [ "less_equal", "structcrap_1_1less__equal.html", "structcrap_1_1less__equal" ],
    [ "cpu_info", "classcrap_1_1cpu__info.html", "classcrap_1_1cpu__info" ],
    [ "endian", "classcrap_1_1endian.html", "classcrap_1_1endian" ],
    [ "limits", "structcrap_1_1limits.html", "structcrap_1_1limits" ],
    [ "limits< b8 >", "structcrap_1_1limits_3_01b8_01_4.html", "structcrap_1_1limits_3_01b8_01_4" ],
    [ "limits< c8 >", "structcrap_1_1limits_3_01c8_01_4.html", "structcrap_1_1limits_3_01c8_01_4" ],
    [ "limits< i8 >", "structcrap_1_1limits_3_01i8_01_4.html", "structcrap_1_1limits_3_01i8_01_4" ],
    [ "limits< u8 >", "structcrap_1_1limits_3_01u8_01_4.html", "structcrap_1_1limits_3_01u8_01_4" ],
    [ "limits< i16 >", "structcrap_1_1limits_3_01i16_01_4.html", "structcrap_1_1limits_3_01i16_01_4" ],
    [ "limits< u16 >", "structcrap_1_1limits_3_01u16_01_4.html", "structcrap_1_1limits_3_01u16_01_4" ],
    [ "limits< i32 >", "structcrap_1_1limits_3_01i32_01_4.html", "structcrap_1_1limits_3_01i32_01_4" ],
    [ "limits< u32 >", "structcrap_1_1limits_3_01u32_01_4.html", "structcrap_1_1limits_3_01u32_01_4" ],
    [ "limits< i64 >", "structcrap_1_1limits_3_01i64_01_4.html", "structcrap_1_1limits_3_01i64_01_4" ],
    [ "limits< u64 >", "structcrap_1_1limits_3_01u64_01_4.html", "structcrap_1_1limits_3_01u64_01_4" ],
    [ "limits< f32 >", "structcrap_1_1limits_3_01f32_01_4.html", "structcrap_1_1limits_3_01f32_01_4" ],
    [ "limits< f64 >", "structcrap_1_1limits_3_01f64_01_4.html", "structcrap_1_1limits_3_01f64_01_4" ],
    [ "time", "classcrap_1_1time.html", "classcrap_1_1time" ],
    [ "zero", "structcrap_1_1zero.html", "structcrap_1_1zero" ],
    [ "zero< f32 >", "structcrap_1_1zero_3_01f32_01_4.html", "structcrap_1_1zero_3_01f32_01_4" ],
    [ "zero< f64 >", "structcrap_1_1zero_3_01f64_01_4.html", "structcrap_1_1zero_3_01f64_01_4" ],
    [ "math", "classcrap_1_1math.html", "classcrap_1_1math" ],
    [ "allocator_default", "classcrap_1_1allocator__default.html", "classcrap_1_1allocator__default" ],
    [ "allocator_malloc", "classcrap_1_1allocator__malloc.html", "classcrap_1_1allocator__malloc" ],
    [ "memory_pool", "classcrap_1_1memory__pool.html", "classcrap_1_1memory__pool" ],
    [ "MemoryTracker", "classcrap_1_1_memory_tracker.html", "classcrap_1_1_memory_tracker" ],
    [ "functor_thread", "classcrap_1_1functor__thread.html", "classcrap_1_1functor__thread" ],
    [ "mutex", "classcrap_1_1mutex.html", "classcrap_1_1mutex" ],
    [ "runnable", "classcrap_1_1runnable.html", "classcrap_1_1runnable" ],
    [ "scope_lock", "classcrap_1_1scope__lock.html", "classcrap_1_1scope__lock" ],
    [ "semaphore", "classcrap_1_1semaphore.html", "classcrap_1_1semaphore" ],
    [ "thread", "classcrap_1_1thread.html", "classcrap_1_1thread" ],
    [ "static_string", "classcrap_1_1static__string.html", "classcrap_1_1static__string" ]
];